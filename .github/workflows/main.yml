name: mp2

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  Lint-Prettier-Jest:
    name: Executar Lint, Prettier, Jest e Codecov
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Install dependencies
        run: npm install
        working-directory: ./mp2

      - name: Run lint
        run: npm run lint
        working-directory: ./mp2

      - name: Run prettier
        run: npx prettier --write --check .
        working-directory: ./mp2

      - name: Jest
        run: npm run coverage
        working-directory: ./mp2

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./mp2/coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

  Vercel-Preview-Deploy:
    runs-on: ubuntu-latest
    needs: Lint-Prettier-Jest

    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Install dependencies
        run: npm install
        working-directory: ./mp2

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Configure Vercel for Preview
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./mp2

      - name: Build Project Artifacts
        run: |
          vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./mp2

      - name: Deploy to Vercel
        run: vercel deploy --prebuilt --token ${{ secrets.VERCEL_TOKEN }}
        working-directory: ./mp2

  Vercel-Prod-Deploy:
    runs-on: ubuntu-latest
    needs: Vercel-Preview-Deploy

    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Install dependencies
        run: npm install
        working-directory: ./mp2

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Configure Vercel for Production
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: |
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./mp2

      - name: Deploy to Vercel
        run: vercel deploy --prebuilt --prod --token ${{ secrets.VERCEL_TOKEN }}
        working-directory: ./mp2
